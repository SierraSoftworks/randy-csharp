trigger:
  - master
  
variables:
  tag: '$(Build.BuildId)'
  image: sierrasoftworks/rex
  "dotnetcore.version": "3.1.201"
  "dotnetcore.runtime": "linux-x64"

resources:
  repositories:
    - repository: templates
      type: github
      name: SierraSoftworks/devops-pipelines
      endpoint: SierraSoftworks
  
extends:
  template: kubernetes/app.yml@templates
  parameters:
    build:
      - job: build_package
        displayName: Build App Package
        pool:
          vmImage: windows-latest
        steps:
          - task: GitVersion@5
            displayName: GitVersion
            inputs:
              updateAssemblyInfo: true
              preferBundledVersion: false

          - task: UseDotNet@2
            displayName: Use .NET Core SDK $(dotnetcore.version)
            inputs:
              version: $(dotnetcore.version)

          - task: DotNetCoreCLI@2
            displayName: Restore Dependencies
            inputs:
              command: restore

          - task: DotNetCoreCLI@2
            displayName: Run Tests
            inputs:
              command: test
              arguments: '--collect "Code coverage"'
              testRunTitle: "General Tests"

          - task: DotNetCoreCLI@2
            displayName: Build Package
            inputs:
              command: publish
              publishWebProjects: false
              projects: Rex/Rex.csproj
              arguments: "-o out --self-contained --runtime $(dotnetcore.runtime)"

          - task: PublishSymbols@2
            displayName: "Publish Symbols"
            inputs:
              SymbolServerType: TeamServices
              SymbolsProduct: "$(Build.DefinitionName)"
              SymbolsVersion: "$(GitVersion.SemVer)"

          - publish: ./out
            artifact: package
      - job: build_docker
        displayName: Build Docker Image
        steps:
        - task: Docker@2
          displayName: Build Docker Image
          inputs:
            command: buildAndPush
            dockerfile: 'Dockerfile'
            containerRegistry: Docker Hub
            repository: $(image)
            tags: |
              latest
              $(tag)
    manifests: ./.deploy
    containers: |
      $(image):$(tag)
    staging:
      namespace: rex-staging
      environment: staging-rex-sierrasoftworks-com.rex-staging
      healthcheck: https://staging.rex.sierrasoftworks.com/api/v2/health
    production:
      namespace: rex-prod
      environment: rex-sierrasoftworks-com.rex-prod
      healthcheck: https://rex.sierrasoftworks.com/api/v2/health
